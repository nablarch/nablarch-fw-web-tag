loggerFactory.className=nablarch.core.log.basic.BasicLoggerFactory

writerNames=appFile,stdout,accessLog,appLog

# appFile
writer.appFile.className=nablarch.core.log.basic.FileLogWriter
writer.appFile.filePath=./log/app.log
writer.appFile.encoding=UTF-8
writer.appFile.maxFileSize=10000
writer.appFile.formatter.className=nablarch.core.log.basic.BasicLogFormatter
writer.appFile.formatter.format=$date$ -$logLevel$- $loggerName$ [$executionId$] boot_proc = [$bootProcess$] proc_sys = [$processingSystem$] req_id = [$requestId$] usr_id = [$userId$] $message$$information$$stackTrace$

# stdout
writer.stdout.className=nablarch.core.log.basic.StandardOutputLogWriter
writer.stdout.formatter.className=nablarch.core.log.basic.BasicLogFormatter
writer.stdout.formatter.format=$date$ -$logLevel$- $loggerName$ [$executionId$] req_id = [$requestId$] usr_id = [$userId$] $message$$information$$stackTrace$

# accessLog
writer.accessLog.className=nablarch.test.support.log.app.OnMemoryLogWriter
writer.accessLog.formatter.className=nablarch.core.log.basic.BasicLogFormatter
writer.accessLog.formatter.format=$logLevel$ $loggerName$ $message$$information$$stackTrace$

# appLog
writer.appLog.className=nablarch.test.support.log.app.OnMemoryLogWriter
writer.appLog.formatter.className=nablarch.core.log.basic.BasicLogFormatter
writer.appLog.formatter.format=$logLevel$ $loggerName$ $message$$information$$stackTrace$

availableLoggersNamesOrder=ACC,ROO

# ROO
loggers.ROO.nameRegex=.*
loggers.ROO.level=INFO
loggers.ROO.writerNames=appFile,appLog,stdout

# ACC
loggers.ACC.nameRegex=HTTP_ACCESS
loggers.ACC.level=INFO
loggers.ACC.writerNames=appFile,accessLog,stdout
